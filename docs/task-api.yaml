openapi: 3.0.0
info:
  description: This is the API for the Celonis Programming Challenge
  version: 1.0.0
  title: Celonis Programming Challenge
paths:
  /tasks/:
    post:
      tags:
        - tasks
      summary: Create a new task
      description: Create a new task of a specific type via this general interface. State a valid task type and give the neccessary parameters. If the parameters are insufficient or invalid for the requested task, the answer code will show that.
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskCreationPayload"
        description: task to create
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "405":
          description: Invalid input
    get:
      tags:
        - tasks
      summary: list all tasks
      description: ""
      operationId: listTasks
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectGenerationTask"
  "/tasks/{id}":
    get:
      tags:
        - tasks
      summary: get a tasks by id
      description: ""
      operationId: getTask
      parameters:
        - name: id
          in: path
          description: id of task to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectGenerationTask"
        "404":
          description: not found
    put:
      tags:
        - tasks
      summary: update a tasks by id
      description: ""
      operationId: updateTask
      parameters:
        - name: id
          in: path
          description: id of task to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectGenerationTask"
        description: updated task
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectGenerationTask"
        "404":
          description: not found
    delete:
      tags:
        - tasks
      summary: delete a tasks by id
      description: ""
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: id of task to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: successful operation
        "404":
          description: not found
  "/tasks/{id}/execute":
    post:
      tags:
        - tasks
      summary: execute a tasks by id
      description: ""
      operationId: executeTask
      parameters:
        - name: id
          in: path
          description: id of task to execute
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: successful operation
        "404":
          description: not found
  "/tasks/{id}/result":
    get:
      tags:
        - tasks
      summary: downloads the task result
      description: Returns the result of the task execution, depending on the type of the task. Some types of tasks do not produce a result that can be downloaded.
      operationId: downloadTaskResult
      parameters:
        - name: id
          in: path
          description: id of task to get result
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: successfull operation
          content:
            "*/*":
              schema:
                type: string
                format: binary
        "404":
          description: not found
security:
  - api_key: []
servers:
  - url: http://localhost:30163/api
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: Celonis-Auth
      in: header
  schemas:
    TaskCreationPayload:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        x:
          type: number
        y:
          type: integer
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        creationDate:
          type: string
          format: date-time
        type:
          type: string
        hasConsumableResult:
          type: boolean
        progress:
          type: number
          format: double
    ProjectGenerationTask:
      description: Sets type to PROJECTGENERATION
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            rootCause:
              type: string
    TimerTask:
      description: Sets type to TIMER
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object